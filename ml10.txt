'''Develop a program to implement k-means clustering using Wisconsin Breast Cancer data set and 
visualize the clustering result. '''
 
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
from sklearn.datasets import load_breast_cancer 
from sklearn.preprocessing import StandardScaler 
from sklearn.cluster import KMeans 
from sklearn.decomposition import PCA 
 
# Step 1: Load the Wisconsin Breast Cancer dataset 
data = load_breast_cancer() 
X = data.data  # Features 
y = data.target  # Target labels 
 
# Step 2: Preprocessing (optional but important for clustering) 
# Standardize the data to have mean=0 and variance=1 
scaler = StandardScaler() 
X_scaled = scaler.fit_transform(X) 
 
# Step 3: Apply KMeans clustering 
kmeans = KMeans(n_clusters=2, random_state=42)  # 2 clusters (malignant and benign) 
kmeans.fit(X_scaled) 
 
# Get the predicted clusters 
clusters = kmeans.predict(X_scaled) 
 
# Step 4: Visualize the results using PCA for dimensionality reduction 
# Reducing to 2 dimensions for visualization 
pca = PCA(n_components=2) 
X_pca = pca.fit_transform(X_scaled) 
 
# Plot the clusters 
plt.figure(figsize=(8, 6)) 
plt.scatter(X_pca[clusters == 0, 0], X_pca[clusters == 0, 1], s=50, c='red', label='Cluster 0 (Benign)') 
plt.scatter(X_pca[clusters == 1, 0], X_pca[clusters == 1, 1], s=50, c='blue', label='Cluster 1 (Malignant)') 
 
# Plot the centroids 
centroids = pca.transform(kmeans.cluster_centers_) 
plt.scatter(centroids[:, 0], centroids[:, 1], s=200, c='black', marker='X', label='Centroids') 
 
# Add labels and title 
plt.title('K-Means Clustering on Breast Cancer Dataset') 
plt.xlabel('PCA Component 1') 
plt.ylabel('PCA Component 2') 
plt.legend() 
plt.show()
