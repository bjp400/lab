'''Develop a program to demonstrate the working of the decision tree algorithm. Use Breast Cancer Data 
set for building the decision tree and apply this knowledge to classify a new sample.''' 
 
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
from sklearn.datasets import load_breast_cancer 
from sklearn.model_selection import train_test_split 
from sklearn.tree import DecisionTreeClassifier, plot_tree 
from sklearn.metrics import accuracy_score, classification_report 
 
# Step 1: Load the Breast Cancer Dataset 
data = load_breast_cancer() 
X = data.data  # Features 
y = data.target  # Target (0 = malignant, 1 = benign) 
 
# Step 2: Split the data into training and testing sets 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 
 
# Step 3: Initialize the Decision Tree Classifier and fit the model 
clf = DecisionTreeClassifier(random_state=42) 
clf.fit(X_train, y_train) 
 
# Step 4: Predict on the test data 
y_pred = clf.predict(X_test) 
 
# Step 5: Evaluate the model 
accuracy = accuracy_score(y_test, y_pred) 
print(f"Accuracy of Decision Tree on Test Set: {accuracy * 100:.2f}%") 
print("\nClassification Report:") 
print(classification_report(y_test, y_pred)) 
 
# Step 6: Visualize the Decision Tree (optional) 
plt.figure(figsize=(12, 8)) 
plot_tree(clf, filled=True, feature_names=data.feature_names, class_names=data.target_names, 
rounded=True) 
plt.title("Decision Tree Visualized") 
plt.show() 
 
# Step 7: Classify a new sample (Example) 
# We can classify a new sample by providing a 1D array of features. For example: 
new_sample = np.array([[15.2, 19.5, 103.2, 800.2, 0.07, 0.3, 1.2, 4.2, 0.03, 0.1, 0.08, 0.05, 0.03, 0.03, 0.06, 
0.09, 0.02, 0.07, 0.03, 0.08, 0.04, 0.02, 0.01, 0.04, 0.06, 0.03, 0.02, 0.01, 0.03, 0.02]]) 
new_prediction = clf.predict(new_sample) 
print("\nNew sample classified as:", data.target_names[new_prediction][0])
